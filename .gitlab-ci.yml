variables:
  BUILD_ENV: "pd-build-mgmt-373"
  RUNNING_ENV: "pd-ci-mgmt-373"
  PYTHON_PATH: "/D/Projects/PD/softwares/python/python-3.7.3"
  BASE_PYTHON_PATH: "D:/Projects/PD/softwares/python/python-3.7.3"
  VE_PATH: "${CI_BUILDS_DIR}/${RUNNING_ENV}/Scripts/activate.ps1"
  NSSM_PATH: "/D/Projects/PD/softwares/nssm/nssm-2.24/win64/nssm.exe"
  SERVICE_NAME: "pd-ci-mgmt"
  PACKAGE: "pd-mgmt"
  CI_DEBUG_TRACE: "false"


stages:
  - test
  - sonar-scan
  - build
  - deploy
  - build-test
  - deploy-test
  - build_svt
  - deploy_svt
  - build_uat
  - deploy_uat
  - build_uat1
  - deploy_uat1
  - build_prod
  - deploy_prod
  - rollback

default:
  before_script:
    - sh etmfa/ci_scripts/create_venv.sh
    - . $VE_PATH

flake8:
  tags:
    - pd-dev-windows-ml01q
  stage: test
  variables:
    GIT_CLONE_PATH: "${CI_BUILDS_DIR}/${PACKAGE}"
    REGISTRY_PYPI_URL: $REGISTRY_PYPI_URL
    REGISTRY_SERVER: $REGISTRY_SERVER
  script:
    - flake8 --exit-zero --max-line-length=120
  allow_failure: true
  only:
    refs:
      - develop
      - /^develop-?*/
      - merge_requests
      - /^pd-release/*/
    variables:
      - $ENVIRONMENT== "dev"

unit-tests:
  tags:
      - pd-dev-windows-ml01q
  stage: test
  before_script:
    - . $VE_PATH
  script:
    - python -m pytest -v --cov=./ --cov-report xml -v --junitxml="test_results.xml"
  artifacts:
    paths:
      - coverage.xml
    reports:
      junit: test_results.xml
  allow_failure: true
  only:
    refs:
      - develop
      - /^develop-?*/
      - merge_requests
      - /^pd-release/*/
    variables:
      - $ENVIRONMENT== "dev"

Perform Sonarqube Analysis and quality gate:
  image: sonarsource/sonar-scanner-cli
  stage: sonar-scan
  before_script:
    - echo "Setting up for Sonarqube Analysis on $CI_COMMIT_REF_NAME branch"
    - apk upgrade --update-cache --available && apk add openssl
    - openssl s_client -connect   sonarqube.quintiles.com:443 | keytool -import -noprompt -alias sonarqbue_test -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit
  script:
    - echo "Running Sonarqube Analysis on $CI_COMMIT_REF_NAME branch"
    - apk upgrade --update-cache --available && apk add openssl
    - sh scripts/sonarqube.sh branch > /tmp/sonar.log
    - cat /tmp/sonar.log
    - echo "Running Sonarqube quality gate on $CI_COMMIT_REF_NAME branch"
    - sh scripts/qualitygate.sh
  allow_failure: true
  tags:
    - ca2ugitla008p-D3
  only:
    refs:
      - develop
      - /^develop-?*/
      - merge_requests
      - /^pd-release/*/
    variables:
      - $ENVIRONMENT== "dev"

build:
  tags:
    - pd-dev-windows-ml01q
  stage: build
  variables:
    REGISTRY_PYPI_URL: $REGISTRY_PYPI_URL
    REGISTRY_PYPI_USER: $REGISTRY_PYPI_USER
    REGISTRY_PYPI_PWD: $REGISTRY_PYPI_PWD
    PACKAGE_VERSION: $CURRENT_VERSION
  before_script:
    - . $VE_PATH
  script:
    - python setup.py sdist
    - twine upload --repository-url $REGISTRY_PYPI_URL --username ${REGISTRY_PYPI_USER} --password ${REGISTRY_PYPI_PWD}  -r nexus dist/*
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - develop
      - /^develop-?*/
      - merge_requests
      - /^pd-release/*/
    variables:
      - $ENVIRONMENT== "dev"

deploy-dev:
  tags:
    - pd-dev-windows-ml01q
  stage: deploy
  variables:
    VM_DEBUG: $DEV_VM_DEBUG
    VM_MQUSER: $DEV_VM_MQUSER
    VM_MQPASS: $DEV_VM_MQPASS
    VM_MQHOST: $DEV_VM_MQHOST
    VM_LOGSTASH_HOST: $DEV_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $DEV_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $DEV_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $DEV_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $DEV_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $DEV_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $REGISTRY_PYPI_URL
    REGISTRY_SERVER: $REGISTRY_SERVER
    PACKAGE_VERSION: $CURRENT_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $DEV_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $DEV_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $DEV_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $DEV_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $DEV_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml01q:9001/pd/api/health"
    VM_MIGRATION: $DEV_VM_MIGRATION
    
  before_script:
    - . $VE_PATH
  script:
    - sh etmfa/ci_scripts/deploy.sh dist
  environment:
    name: dev
  only:
    refs:
      - develop
      - /^develop-?*/
      - merge_requests
      - /^pd-release/*/
    variables:
      - $ENVIRONMENT== "dev"
  when: manual

DEV-Rollback:
 stage: rollback
 tags:
   - pd-dev-windows-ml01q
 variables:
    VM_DEBUG: $DEV_VM_DEBUG
    VM_MQUSER: $DEV_VM_MQUSER
    VM_MQPASS: $DEV_VM_MQPASS
    VM_MQHOST: $DEV_VM_MQHOST
    VM_LOGSTASH_HOST: $DEV_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $DEV_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $DEV_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $DEV_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $DEV_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $DEV_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $REGISTRY_PYPI_URL
    REGISTRY_SERVER: $REGISTRY_SERVER
    PACKAGE_VERSION: $DEV_ROLLBACK_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $DEV_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $DEV_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $DEV_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $DEV_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $DEV_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml01q:9001/pd/api/health"
    VM_MIGRATION: $DEV_VM_MIGRATION
 before_script:
   - . $VE_PATH
 script:
   - sh etmfa/ci_scripts/rollback.sh package
 environment:
   name: dev
 needs:
   - deploy-dev
 rules:
   - if: $ENVIRONMENT == "dev"
     when: on_failure

build-test:
  tags:
    - pd-test-windows-ml101q
  stage: build-test
  variables:
    GIT_CLONE_PATH: "${CI_BUILDS_DIR}/${PACKAGE}"
    REGISTRY_PYPI_URL: $REGISTRY_PYPI_URL
    REGISTRY_SERVER: $REGISTRY_SERVER
    REGISTRY_PYPI_USER: $REGISTRY_PYPI_USER
    REGISTRY_PYPI_PWD: $REGISTRY_PYPI_PWD
    PACKAGE_VERSION: $CURRENT_VERSION
  script:
    - python setup.py sdist
    - twine upload --repository-url $REGISTRY_PYPI_URL --username ${REGISTRY_PYPI_USER} --password ${REGISTRY_PYPI_PWD}  -r nexus dist/*
  artifacts:
    paths:
      - dist/
  only:
   refs:
      - develop
      - /^pd-release/*/
      - merge_requests
   variables:
      - $ENVIRONMENT== "test"

deploy-test:
  tags:
    - pd-test-windows-ml101q
  stage: deploy-test
  variables:
    VM_DEBUG: $TEST_VM_DEBUG
    VM_MQUSER: $TEST_VM_MQUSER
    VM_MQPASS: $TEST_VM_MQPASS
    VM_MQHOST: $TEST_VM_MQHOST
    VM_LOGSTASH_HOST: $TEST_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $TEST_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $TEST_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $TEST_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $TEST_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $TEST_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $REGISTRY_PYPI_URL
    REGISTRY_SERVER: $REGISTRY_SERVER
    PACKAGE_VERSION: $CURRENT_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $TEST_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $TEST_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $TEST_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $TEST_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $TEST_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml101q:9001/pd/api/health"
    VM_MIGRATION: $TEST_VM_MIGRATION
  before_script:
    - . $VE_PATH
  script:
    - sh etmfa/ci_scripts/deploy.sh dist
  environment:
    name: test
  only:
    refs:
      - develop
      - /^pd-release/*/
    variables:
      - $ENVIRONMENT== "test"

TEST-Rollback:
 stage: rollback
 tags:
   - pd-test-windows-ml101q
 variables:
    VM_DEBUG: $TEST_VM_DEBUG
    VM_MQUSER: $TEST_VM_MQUSER
    VM_MQPASS: $TEST_VM_MQPASS
    VM_MQHOST: $TEST_VM_MQHOST
    VM_LOGSTASH_HOST: $TEST_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $TEST_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $TEST_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $TEST_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $TEST_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $TEST_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $REGISTRY_PYPI_URL
    REGISTRY_SERVER: $REGISTRY_SERVER
    PACKAGE_VERSION: $TEST_ROLLBACK_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $TEST_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $TEST_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $TEST_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $TEST_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $TEST_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml101q:9001/pd/api/health"
    VM_MIGRATION: $TEST_VM_MIGRATION
 before_script:
   - . $VE_PATH
 script:
   - sh etmfa/ci_scripts/rollback.sh package
 environment:
   name: test
 needs:
   - deploy-test
 rules:
   - if: $ENVIRONMENT == "test"
     when: on_failure

build-svt:
  tags:
    - ca2spdml15q
  stage: build_svt
  variables:
    GIT_CLONE_PATH: "${CI_BUILDS_DIR}/${PACKAGE}"
    REGISTRY_PYPI_URL: $TEST_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $TEST_REGISTRY_SERVER
    REGISTRY_PYPI_USER: $TEST_REGISTRY_PYPI_USER
    REGISTRY_PYPI_PWD: $TEST_REGISTRY_PYPI_PWD
    PACKAGE_VERSION: $CURRENT_VERSION
  script:
    - python setup.py sdist
    - twine upload --repository-url $REGISTRY_PYPI_URL --username ${REGISTRY_PYPI_USER} --password ${REGISTRY_PYPI_PWD}  -r nexus dist/*
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - /^pd-release/*/
      - develop
    variables:
      - $ENVIRONMENT== "svt"

deploy-svt:
  tags:
    - ca2spdml15q
  stage: deploy_svt
  variables:
    VM_DEBUG: $SVT_VM_DEBUG
    VM_MQUSER: $SVT_VM_MQUSER
    VM_MQPASS: $SVT_VM_MQPASS
    VM_MQHOST: $SVT_VM_MQHOST
    VM_LOGSTASH_HOST: $SVT_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $SVT_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $SVT_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $SVT_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $SVT_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $SVT_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $TEST_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $TEST_REGISTRY_SERVER
    PACKAGE_VERSION: $CURRENT_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $SVT_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $SVT_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $SVT_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $SVT_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $SVT_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml15q:9001/pd/api/health"
    VM_MIGRATION: $SVT_VM_MIGRATION
  before_script:
    - . $VE_PATH
  script:
    - sh etmfa/ci_scripts/deploy.sh dist
  environment:
    name: svt
  only:
    refs:
      - /^pd-release/*/
      - develop
    variables:
      - $ENVIRONMENT== "svt"

SVT-Rollback:
 stage: rollback
 tags:
   - ca2spdml15q
 variables:
    VM_DEBUG: $SVT_VM_DEBUG
    VM_MQUSER: $SVT_VM_MQUSER
    VM_MQPASS: $SVT_VM_MQPASS
    VM_MQHOST: $SVT_VM_MQHOST
    VM_LOGSTASH_HOST: $SVT_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $SVT_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $SVT_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $SVT_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $SVT_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $SVT_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $TEST_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $TEST_REGISTRY_SERVER
    PACKAGE_VERSION: $SVT_ROLLBACK_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $SVT_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $SVT_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $SVT_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $SVT_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $SVT_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml15q:9001/pd/api/health"
    VM_MIGRATION: $SVT_VM_MIGRATION
 before_script:
   - . $VE_PATH
 script:
   - sh etmfa/ci_scripts/rollback.sh package
 environment:
   name: svt
 needs:
   - deploy-svt
 rules:
   - if: $ENVIRONMENT == "svt"
     when: on_failure

build-uat:
  tags:
    - ca2spdml05c
  stage: build_uat
  variables:
    GIT_CLONE_PATH: "${CI_BUILDS_DIR}/${PACKAGE}"
    REGISTRY_PYPI_URL: $TEST_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $TEST_REGISTRY_SERVER
    REGISTRY_PYPI_USER: $TEST_REGISTRY_PYPI_USER
    REGISTRY_PYPI_PWD: $TEST_REGISTRY_PYPI_PWD
    PACKAGE_VERSION: $CURRENT_VERSION
  script:
    - python setup.py sdist
    - twine upload --repository-url $REGISTRY_PYPI_URL --username ${REGISTRY_PYPI_USER} --password ${REGISTRY_PYPI_PWD}  -r nexus dist/*
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - /^pd-release/*/
      - develop
    variables:
      - $ENVIRONMENT== "uat"

deploy-uat:
  tags:
    - ca2spdml05c
  stage: deploy_uat
  variables:
    VM_DEBUG: $UAT_VM_DEBUG
    VM_MQUSER: $UAT_VM_MQUSER
    VM_MQPASS: $UAT_VM_MQPASS
    VM_MQHOST: $UAT_VM_MQHOST
    VM_LOGSTASH_HOST: $UAT_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $UAT_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $UAT_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $UAT_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $UAT_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $UAT_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $TEST_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $TEST_REGISTRY_SERVER
    PACKAGE_VERSION: $CURRENT_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $UAT_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $UAT_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $UAT_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $UAT_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $UAT_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml05c:9001/pd/api/health"
    VM_MIGRATION: $UAT_VM_MIGRATION
  before_script:
    - . $VE_PATH
  script:
    - sh etmfa/ci_scripts/deploy.sh dist
  environment:
    name: uat
  only:
    refs:
      - /^pd-release/*/
      - develop
    variables: 
      - $ENVIRONMENT== "uat"

UAT-Rollback:
 stage: rollback
 tags:
   - ca2spdml05c
 variables:
    VM_DEBUG: $UAT_VM_DEBUG
    VM_MQUSER: $UAT_VM_MQUSER
    VM_MQPASS: $UAT_VM_MQPASS
    VM_MQHOST: $UAT_VM_MQHOST
    VM_LOGSTASH_HOST: $UAT_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $UAT_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $UAT_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $UAT_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $UAT_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $UAT_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $TEST_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $TEST_REGISTRY_SERVER
    PACKAGE_VERSION: $UAT_ROLLBACK_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $UAT_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $UAT_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $UAT_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $UAT_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $UAT_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml05c:9001/pd/api/health"
    VM_MIGRATION: $UAT_VM_MIGRATION
 before_script:
   - . $VE_PATH
 script:
   - sh etmfa/ci_scripts/rollback.sh package
 environment:
   name: uat
 needs:
   - deploy-uat
 rules:
   - if: $ENVIRONMENT == "uat"
     when: on_failure

build-uat1:
  tags:
    - ca2spdml101d
  stage: build_uat1
  variables:
    GIT_CLONE_PATH: "${CI_BUILDS_DIR}/${PACKAGE}"
    REGISTRY_PYPI_URL: $TEST_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $TEST_REGISTRY_SERVER
    REGISTRY_PYPI_USER: $TEST_REGISTRY_PYPI_USER
    REGISTRY_PYPI_PWD: $TEST_REGISTRY_PYPI_PWD
    PACKAGE_VERSION: $CURRENT_VERSION
  script:
    - python setup.py sdist
    - twine upload --repository-url $REGISTRY_PYPI_URL --username ${REGISTRY_PYPI_USER} --password ${REGISTRY_PYPI_PWD}  -r nexus dist/*
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - feature/ci-cd-uat1
      - /^pd-release/*/
      - develop
    variables:
      - $ENVIRONMENT== "uat1"

deploy-uat1:
  tags:
    - ca2spdml101d
  stage: deploy_uat1
  variables:
    VM_DEBUG: $UAT1_VM_DEBUG
    VM_MQUSER: $UAT1_VM_MQUSER
    VM_MQPASS: $UAT1_VM_MQPASS
    VM_MQHOST: $UAT1_VM_MQHOST
    VM_LOGSTASH_HOST: $UAT1_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $UAT1_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $UAT1_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $UAT1_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $UAT1_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $UAT1_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $TEST_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $TEST_REGISTRY_SERVER
    PACKAGE_VERSION: $CURRENT_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $UAT1_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $UAT1_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $UAT1_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $UAT1_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $UAT1_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml101d:9001/pd/api/health"
    VM_MIGRATION: $UAT1_VM_MIGRATION
  before_script:
    - . $VE_PATH
  script:
    - sh etmfa/ci_scripts/deploy.sh dist
  environment:
    name: uat1
  only:
    refs:
      - feature/ci-cd-uat1
      - /^pd-release/*/
      - develop
    variables:
      - $ENVIRONMENT== "uat1"

UAT1-Rollback:
 stage: rollback
 tags:
   - ca2spdml101d
 variables:
    VM_DEBUG: $UAT1_VM_DEBUG
    VM_MQUSER: $UAT1_VM_MQUSER
    VM_MQPASS: $UAT1_VM_MQPASS
    VM_MQHOST: $UAT1_VM_MQHOST
    VM_LOGSTASH_HOST: $UAT1_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $UAT1_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $UAT1_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $UAT1_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $UAT1_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $UAT1_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $TEST_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $TEST_REGISTRY_SERVER
    PACKAGE_VERSION: $UAT1_ROLLBACK_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $UAT1_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $UAT1_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $UAT1_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $UAT1_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $UAT1_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml101d:9001/pd/api/health"
    VM_MIGRATION: $UAT1_VM_MIGRATION
 before_script:
   - . $VE_PATH
 script:
   - sh etmfa/ci_scripts/rollback.sh package
 environment:
   name: uat1
 needs:
   - deploy-uat1
 rules:
   - if: $ENVIRONMENT == "uat1"
     when: on_failure

build-prod:
  tags:
    - ca2spdml05p
  stage: build_prod
  variables:
    GIT_CLONE_PATH: "${CI_BUILDS_DIR}/${PACKAGE}"
    REGISTRY_PYPI_URL: $PROD_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $PROD_REGISTRY_SERVER
    REGISTRY_PYPI_USER: $PROD_REGISTRY_PYPI_USER
    REGISTRY_PYPI_PWD: $PROD_REGISTRY_PYPI_PWD
    PACKAGE_VERSION: $CURRENT_VERSION
  script:
    - python setup.py sdist
    - twine upload --repository-url $REGISTRY_PYPI_URL --username ${REGISTRY_PYPI_USER} --password ${REGISTRY_PYPI_PWD}  -r nexus dist/*
  artifacts:
    paths:
      - dist/
  only:
    refs:
      - /^pd-release/*/
      - develop
    variables:
      - $ENVIRONMENT== "prod"

deploy-prod:
  tags:
    - ca2spdml05p
  stage: deploy_prod
  variables:
    VM_DEBUG: $PROD_VM_DEBUG
    VM_MQUSER: $PROD_VM_MQUSER
    VM_MQPASS: $PROD_VM_MQPASS
    VM_MQHOST: $PROD_VM_MQHOST
    VM_LOGSTASH_HOST: $PROD_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $PROD_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $PROD_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $PROD_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $PROD_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $PROD_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $PROD_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $PROD_REGISTRY_SERVER
    PACKAGE_VERSION: $CURRENT_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $PROD_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $PROD_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $PROD_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $PROD_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $PROD_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml05p:9001/pd/api/health"
    VM_MIGRATION: $PROD_VM_MIGRATION
  before_script:
    - . $VE_PATH
  script:
    - sh etmfa/ci_scripts/deploy.sh dist
  environment:
    name: prod
  only:
    refs:
      - /^pd-release/*/
      - develop
    variables:
      - $ENVIRONMENT== "prod"

PROD-Rollback:
 stage: rollback
 tags:
   - ca2spdml05p
 variables:
    VM_DEBUG: $PROD_VM_DEBUG
    VM_MQUSER: $PROD_VM_MQUSER
    VM_MQPASS: $PROD_VM_MQPASS
    VM_MQHOST: $PROD_VM_MQHOST
    VM_LOGSTASH_HOST: $PROD_VM_LOGSTASH_HOST
    VM_DFS_UPLOAD_FOLDER: $PROD_VM_DFS_UPLOAD_FOLDER
    VM_SQLALCHEMY_DATABASE_URI: $PROD_VM_SQLALCHEMY_DATABASE_URI
    VM_PD_UI_LINK: $PROD_VM_PD_UI_LINK
    VM_AUTH_DETAILS: $PROD_VM_AUTH_DETAILS
    VM_UNIT_TEST_HEADERS: $PROD_VM_UNIT_TEST_HEADERS
    REGISTRY_PYPI_URL: $PROD_REGISTRY_PYPI_URL
    REGISTRY_SERVER: $PROD_REGISTRY_SERVER
    PACKAGE_VERSION: $PROD_ROLLBACK_VERSION
    VM_ENABLE_WORK_FLOW_RUNNER: $VM_ENABLE_WORK_FLOW_RUNNER
    VM_ELASTIC_DETAILS: $PROD_VM_ELASTIC_DETAILS
    VM_UI_HOST_NAME: $PROD_VM_UI_HOST_NAME
    VM_EMAILS_ENABLED: $PROD_VM_EMAILS_ENABLED
    VM_FROM_EMAIL: $VM_FROM_EMAIL
    VM_SMTP_HOST: $PROD_VM_SMTP_HOST
    VM_SMTP_PORT: $VM_SMTP_PORT
    VM_CDC_OMIT_IP_LIST: $PROD_VM_CDC_OMIT_IP_LIST
    VM_ENABLE_LOCAL_MODE: $VM_ENABLE_LOCAL_MODE
    VM_NO_CDC_REQUIRED_TABLE_LIST: $VM_NO_CDC_REQUIRED_TABLE_LIST
    VERIFICATION_URL: "http://ca2spdml05p:9001/pd/api/health"
    VM_MIGRATION: $PROD_VM_MIGRATION
 before_script:
   - . $VE_PATH
 script:
   - sh etmfa/ci_scripts/rollback.sh package
 environment:
   name: prod
 needs:
   - deploy-prod
 rules:
   - if: $ENVIRONMENT == "prod"
     when: on_failure
